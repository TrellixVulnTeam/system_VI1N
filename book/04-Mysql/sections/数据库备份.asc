=== web 备份迁移

==== mysql备份还原

.备份
[source,bash]
----
mysqldump -uroot -p'geek' --add-drop-table dedecms_foo_com > /data/db/dedecms_foo_com.sql
----


.备份的每条数据增加 insert 语句
[source,bash]
----
mysqldump -uroot -p'geek' --extended-insert=FALSE dedecms_foo_com>dedecms_foo_com.sql
----


.还原
[source,bash]
----
mysql -uroot -p'geek' dedecms_foo_com < /data/db/dedecms_foo_com.sql
----


.打包压缩
[source,bash]
----
tar -zcvf /data/db/dedecms_foo_com.sql.tar.gz -C /data/db/dedecms_foo_com.sql
----


.备份到服务器
[source,bash]
----
rsync -a --log-file=/tmp/rsync.log /data/db/ root@192.168.2.8:/data/backup/db/
----


==== web文件备份

.备份到服务器
[source,bash]
----
rsync -a --log-file=/tmp/rsync.log /data/web/ root@192.168.2.8:/data/backup/web/
----


==== 命令参数解释

.mysqldump
[source,bash]
----
--add-drop-database	在每个 CREATE DATABASE 语句之前添加 DROP DATABASE 语句
--add-drop-table	在每个 CREATE TABLE 语句之前添加 DROP TABLE 语句
--add-drop-trigger	在每个 CREATE TRIGGER 语句之前添加 DROP TRIGGER 语句
--add-locks	用 LOCK TABLES 和 UNLOCK TABLES 语句包围每个 table 转储
--all-databases	转储所有数据库中的所有 table
--allow-keywords	允许创建作为关键字的列名
--apply-slave-statements	在 CHANGE MASTER 语句之前包含 STOP SLAVE，在输出结束时包含 START SLAVE
--bind-address	使用指定的网络接口连接到 MySQL Server
--character-sets-dir	字符集的安装目录
--comments	添加 Comments 到转储文件
--compact	产生更紧凑的输出
--compatible	产生与其他数据库系统或更旧的 MySQL 服务器更兼容的输出
--complete-insert	使用包含列名称的完整 INSERT 语句
--compress	压缩 Client 端和服务器之间发送的所有信息
--create-options	在 CREATE TABLE 语句中包括所有特定于 MySQL 的 table 选项
--databases	将所有名称参数解释为数据库名称
--debug	编写调试日志
--debug-check	程序退出时打印调试信息
--debug-info	程序退出时打印调试信息，内存和 CPU 统计信息
--default-auth	身份验证插件使用
--default-character-set	指定默认字符集
--defaults-extra-file	除常规选项文件外，还读取命名的选项文件
--defaults-file	只读命名的选项文件
--defaults-group-suffix	选项组后缀值
--delete-master-logs	在主复制服务器上，执行转储操作后删除二进制日志
--disable-keys	对于每个 table，在 INSERT 语句周围加上用于禁用和启用键的语句
--dump-date	如果给出--comments，则将转储日期包括为“转储完成于”Comments
--dump-slave	包含 CHANGE MASTER 语句，该语句列出了从属主机的二进制日志坐标
--enable-cleartext-plugin	启用明文身份验证插件	5.7.10
--events	从转储的数据库中转储事件
--extended-insert	使用多行 INSERT 语法
--fields-enclosed-by	该选项与--tab 选项一起使用，其含义与 LOAD DATA 的相应子句相同
--fields-escaped-by	该选项与--tab 选项一起使用，其含义与 LOAD DATA 的相应子句相同
--fields-optionally-enclosed-by	该选项与--tab 选项一起使用，其含义与 LOAD DATA 的相应子句相同
--fields-terminated-by	该选项与--tab 选项一起使用，其含义与 LOAD DATA 的相应子句相同
--flush-logs	开始转储之前刷新 MySQL 服务器日志文件
--flush-privileges	转储 mysql 数据库后发出 FLUSH PRIVILEGES 语句
--force	即使在 table 转储期间发生 SQL 错误，也要 continue
--get-server-public-key	从服务器请求 RSA 公钥	5.7.23
--help	显示帮助信息并退出
--hex-blob	使用十六进制 table 示法转储二进制列
--host	MySQL 服务器所在的主机
--ignore-error	忽略指定的错误
--ignore-table	不要转储给定的 table
--include-master-host-port	在由--dump-slave 生成的 CHANGE MASTER 语句中包括 MASTER_HOST/MASTER_PORT 选项
--insert-ignore	编写 INSERT IGNORE 而不是 INSERT 语句
--lines-terminated-by	该选项与--tab 选项一起使用，其含义与 LOAD DATA 的相应子句相同
--lock-all-tables	锁定所有数据库中的所有 table
--lock-tables	转储之前锁定所有 table
--log-error	将警告和错误附加到命名文件
--login-path	从.mylogin.cnf 中读取登录路径选项
--master-data	将二进制日志文件的名称和位置写入输出
--max-allowed-packet	发送到服务器或从服务器接收的最大数据包长度
--net-buffer-length	TCP/IP 和套接字通信的缓冲区大小
--no-autocommit	将每个转储 table 的 INSERT 语句包含在 SET autocommit = 0 和 COMMIT 语句内
--no-create-db	不要写 CREATE DATABASE 语句
--no-create-info	不要编写重新创建每个转储 table 的 CREATE TABLE 语句
--no-data	不要转储 table 内容
--no-defaults	不读取选项文件
--no-set-names	与--skip-set-charset 相同
--no-tablespaces	不要在输出中写入任何 CREATE LOGFILE GROUP 或 CREATE TABLESPACE 语句
--opt	--add-drop-table --add-locks --create-options --disable-keys --extended-insert --lock-tables --quick --set-charset 的简写
--order-by-primary	转储按主键或第一个唯一索引排序的每个 table 的行
--password	连接服务器时使用的密码
--pipe	使用命名管道连接到服务器(仅 Windows)
--plugin-dir	安装插件的目录
--port	用于连接的 TCP/IP 端口号
--print-defaults	打印默认选项
--protocol	使用的传输协议
--quick	一次从服务器检索 table 的行
--quote-names	反引号字符内的引号标识符
--replace	编写 REPLACE 语句而不是 INSERT 语句
--result-file	直接输出到给定文件
--routines	从转储的数据库中转储存储的例程(过程和函数)
--secure-auth	不要以旧(4.1 之前)格式向服务器发送密码	Yes
--server-public-key-path	包含 RSA 公钥的文件的路径名	5.7.23
--set-charset	将 SET NAMES default_character_set 添加到输出
--set-gtid-purged	是否将 SET @@ GLOBAL.GTID_PURGED 添加到输出
--shared-memory-base-name	共享内存连接的共享内存名称(仅 Windows)
--single-transaction	从服务器转储数据之前发出 BEGIN SQL 语句
--skip-add-drop-table	不要在每个 CREATE TABLE 语句之前添加 DROP TABLE 语句
--skip-add-locks	不添加锁
--skip-comments	不要添加 Comments 到转储文件
--skip-compact	不要产生更紧凑的输出
--skip-disable-keys	不要禁用按键
--skip-extended-insert	关闭扩展插入
--skip-opt	关闭--opt 设置的选项
--skip-quick	不要一次从服务器检索 table 的行
--skip-quote-names	不引用标识符
--skip-set-charset	不要写 SET NAMES 语句
--skip-triggers	不要转储触发器
--skip-tz-utc	关闭 tz-utc
--socket	Unix 套接字文件或 Windows 命名管道使用
--ssl	启用连接加密
--ssl-ca	包含受信任的 SSL 证书颁发机构列 table 的文件
--ssl-capath	包含受信任的 SSL 证书颁发机构证书文件的目录
--ssl-cert	包含 X.509 证书的文件
--ssl-cipher	连接加密的允许密码
--ssl-crl	包含证书吊销列 table 的文件
--ssl-crlpath	包含证书吊销列 table 文件的目录
--ssl-key	包含 X.509 密钥的文件
--ssl-mode	与服务器连接的所需安全状态	5.7.11
--ssl-verify-server-cert	根据服务器证书的通用名身份验证主机名
--tab	产生制 table 符分隔的数据文件
--tables	覆盖-数据库或-B 选项
--tls-version	允许的 TLS 协议进行加密连接	5.7.10
--triggers	每个转储 table 的转储触发器
--tz-utc	添加 SET TIME_ZONE ='00:00'来转储文件
--user	连接服务器时使用的 MySQL 用户名
--verbose	Verbose mode
--version	显示版本信息并退出
--where	仅转储给定 WHERE 条件选择的行
--xml	产生 XML 输出
----


===== mysql

示例： +
[source,bash]
----
mysqldump -uroot -pgeek --add-drop-table db_name > db_name.sql
----


参数解释： +
-h：mysql服务器的ip地址或主机名 +
-u：连接mysql服务器的用户名 +
-e：执行mysql内部命令 +
-p：连接mysql服务器的密码 +
-D：使用哪个数据库

==== tar
示例： +
打包 
[source,bash]
----
tar -zcvf test.tar.gz -C /root/document/test
----
 
列出文档 
[source,bash]
----
tar -tf test.tar
----

提取文档 
[source,bash]
----
tar -xf test.tar
----
  
参数解释： +
-c：创建归档 +
-f：指定归档文件 +
-v：显示指令执行过程 +
-z：通过gzip指令压缩/解压缩文件，文件名最好为*.tar.gz +
-C：改变工作目录 +
-t：列出归档文件的内容 +
-x：从归档文件中提取文件 


==== crontab 
[source,bash]
----
crontab
----
 命令被用来提交和管理用户的需要周期性执行的任务

示例： +
[source,text]
----
[root@cky ~]# crontab  -l
*/1 * * * * /bin/sh /usr/bin/vnstat_dump.sh
#1 2 * * * /bin/sh /bak/local_bak/script/tar_mysql_bin.sh
1 3 * * * /bin/sh /bak/local_bak/script/rsync_from_local.sh
1 4 * * * /bin/sh /bak/local_bak/script/full_db_bak.sh

#*/1 * * * * /bin/sh /bak/script/kill_query_timeout.sh
#*/10 * * * * /etc/init.d/php-fpm_www  restart

1 */1 * * * /bin/sh /opt/git_pull_new_ck.sh
59 23 * * 0,6 /bin/sh /bak/script/renew.sh
----

参数解释： +
-e：编辑该用户的计时器设置 +
-l：列出该用户的计时器设置


[NOTE]
====
crontab文件的含义：用户所建立的crontab文件中，每一行都代表一项任务，每行的每个字段代表一项设置，它的格式共分为六个字段，前五段是时间设定段，第六段是要执行的命令段，格式如下：

minute   hour   day   month   week   command  顺序：分 时 日 月 周 命令段

minute： 表示分钟，可以是从0到59之间的任何整数

hour：表示小时，可以是从0到23之间的任何整数

day：表示日期，可以是从1到31之间的任何整数

month：表示月份，可以是从1到12之间的任何整数

week：表示星期几，可以是从0到7之间的任何整数，这里的0或7代表星期日

command：要执行的命令，可以是系统命令，也可以是自己编写的脚本文件

在以上各个字段中，还可以使用以下特殊字符：

*：代表所有可能的值，例如month字段如果是星号，则表示在满足其它字段的制约条件后每月都执行该命令操作

, ：可以用逗号隔开的值指定一个列表范围，例如，“1,2,5,7,8,9”

-：可以用整数之间的中杠表示一个整数范围，例如“2-6”表示“2,3,4,5,6”

/ ：可以用正斜线指定时间的间隔频率，例如“0-23/2”表示每两小时执行一次。同时正斜线可以和星号一起使用，例如*/10，如果用在minute字段，表示每十分钟执行一次
====
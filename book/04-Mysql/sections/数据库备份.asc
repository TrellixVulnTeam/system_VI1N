=== web 备份迁移

==== mysql备份还原

.备份
[source,bash]
----
mysqldump -uroot -p'geek' --add-drop-table dedecms_foo_com > /data/db/dedecms_foo_com.sql
----


.备份的每条数据增加 insert 语句
[source,bash]
----
mysqldump -uroot -p'geek' --extended-insert=FALSE dedecms_foo_com>dedecms_foo_com.sql
----


.还原
[source,bash]
----
mysql -uroot -p'geek' dedecms_foo_com < /data/db/dedecms_foo_com.sql
----


.打包压缩
[source,bash]
----
tar -zcvf /data/db/dedecms_foo_com.sql.tar.gz -C /data/db/dedecms_foo_com.sql
----


.备份到服务器
[source,bash]
----
rsync -a --log-file=/tmp/rsync.log /data/db/ root@192.168.2.8:/data/backup/db/
----


==== web文件备份

.备份到服务器
[source,bash]
----
rsync -a --log-file=/tmp/rsync.log /data/web/ root@192.168.2.8:/data/backup/web/
----


==== 命令参数解释

===== mysqldump
[source,text]
----
::
    解释:: 在每个创建数据库表语句前添加删除数据库表的语句
    例子::  

mysqldump -uroot -pgeek --add-drop-table db_name > db_name.sql
----




--databases

::
    解释:: 导出指定的数据库
    例子:: 
[source,bash]
----
mysqldump -uroot -pgeek --databases foo bar >foo_bar.sql
----


[source,bash]
----
--no-data --databases
----
:: 
    解释:: 仅导出表结构
    例子:: 
[source,bash]
----
mysqldump -uroot -pgeek --no-data --databases db_name >db_name.sql
----


[source,bash]
----
-t
----
::
    解释:: 仅导出数据
    例子::
[source,bash]
----
mysqldump -uroot -pgeek -t foo > foo.sql
----


[source,bash]
----
--all-databases
----
:: 
    解释:: 导出所有数据库
    例子:: 
[source,bash]
----
mysqldump -uroot -pgeek --all-databases >all_database.sql
----


[source,bash]
----
--databases db --tables foo bar
----
::
    解释:: 导出指定表
    例子:: 
[source,bash]
----
mysqldump -uroot -pgeek --databases db_name --tables foo bar  >db_name_foo_bar.sql
----


===== mysql

示例： +
[source,bash]
----
mysqldump -uroot -pgeek --add-drop-table db_name > db_name.sql
----


参数解释： +
-h：mysql服务器的ip地址或主机名 +
-u：连接mysql服务器的用户名 +
-e：执行mysql内部命令 +
-p：连接mysql服务器的密码 +
-D：使用哪个数据库

==== tar
示例： +
打包 
[source,bash]
----
tar -zcvf test.tar.gz -C /root/document/test
----
 
列出文档 
[source,bash]
----
tar -tf test.tar
----

提取文档 
[source,bash]
----
tar -xf test.tar
----
  
参数解释： +
-c：创建归档 +
-f：指定归档文件 +
-v：显示指令执行过程 +
-z：通过gzip指令压缩/解压缩文件，文件名最好为*.tar.gz +
-C：改变工作目录 +
-t：列出归档文件的内容 +
-x：从归档文件中提取文件 


==== rsync
示例： +
[source,bash]
----
rsync -a --log-file=/tmp/rsync.log --backup-dir=data/web/change/ /data/web/ /root/backup/web/
----
 +
-a：归档模式，表示以递归方式传输文件，并保持所有文件属性 +
--backup-dir=： 将备份文件存放在=后的目录下 +
--log-file=/tmp/rsync.log ：设置日志文件 

[source,bash]
----
rsync -v --delete /test1/ /test/
----
 +
--delete：删除目标目录中不相同的文件 +
-v：详细模式输出

[source,bash]
----
rsync -avzP -e 'ssh -p 22' /tmp/ root@192.168.87.133:/tmp
----
 +

[source,bash]
----
rsync -avzP -e 'ssh -p 22' root@192.168.87.133:/tmp/ /tmp
----


==== crontab 
[source,bash]
----
crontab
----
 命令被用来提交和管理用户的需要周期性执行的任务

示例： +
[source,text]
----
[root@cky ~]# crontab  -l
*/1 * * * * /bin/sh /usr/bin/vnstat_dump.sh
#1 2 * * * /bin/sh /bak/local_bak/script/tar_mysql_bin.sh
1 3 * * * /bin/sh /bak/local_bak/script/rsync_from_local.sh
1 4 * * * /bin/sh /bak/local_bak/script/full_db_bak.sh

#*/1 * * * * /bin/sh /bak/script/kill_query_timeout.sh
#*/10 * * * * /etc/init.d/php-fpm_www  restart

1 */1 * * * /bin/sh /opt/git_pull_new_ck.sh
59 23 * * 0,6 /bin/sh /bak/script/renew.sh
----

参数解释： +
-e：编辑该用户的计时器设置 +
-l：列出该用户的计时器设置


[NOTE]
====
crontab文件的含义：用户所建立的crontab文件中，每一行都代表一项任务，每行的每个字段代表一项设置，它的格式共分为六个字段，前五段是时间设定段，第六段是要执行的命令段，格式如下：

minute   hour   day   month   week   command  顺序：分 时 日 月 周 命令段

minute： 表示分钟，可以是从0到59之间的任何整数

hour：表示小时，可以是从0到23之间的任何整数

day：表示日期，可以是从1到31之间的任何整数

month：表示月份，可以是从1到12之间的任何整数

week：表示星期几，可以是从0到7之间的任何整数，这里的0或7代表星期日

command：要执行的命令，可以是系统命令，也可以是自己编写的脚本文件

在以上各个字段中，还可以使用以下特殊字符：

*：代表所有可能的值，例如month字段如果是星号，则表示在满足其它字段的制约条件后每月都执行该命令操作

, ：可以用逗号隔开的值指定一个列表范围，例如，“1,2,5,7,8,9”

-：可以用整数之间的中杠表示一个整数范围，例如“2-6”表示“2,3,4,5,6”

/ ：可以用正斜线指定时间的间隔频率，例如“0-23/2”表示每两小时执行一次。同时正斜线可以和星号一起使用，例如*/10，如果用在minute字段，表示每十分钟执行一次
====
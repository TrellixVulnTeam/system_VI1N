=== Ansible

==== 安装
.添加源
[source,bash]
----
yum -y install epel-release
----

.安装
[source,bash]
----
yum -y install ansible
----

[NOTE]
ansible.cfg 是 Ansible 工具的配置文件； +
hosts 用来配置被管理的机器； +
roles 是一个目录，playbook 将使用它

=== SSH秘钥认证

.生成密钥
[source,bash]
----
ssh-keygen -N "" -f ~/.ssh/mk
----


.上传SSH公钥文件
[source,bash]
----
ssh-copy-id -i ~/.ssh/mk.pub root@118.24.186.166
----


.创建配置文件
[source,bash]
----
cat << EOF > ~/.ssh/config
IdentityFile ~/.ssh/mk
EOF
----

=== 添加被管理主机
.添加主机
[source,bash]
----
vim /etc/ansible/hosts

[test]
10.23.101.x
10.23.101.x

[ss]
192.168.102.12 ansible_ssh_user=tt ansible_ssh_port=28529
[ss:vars]
ansible_ssh_user=tt
ansible_ssh_pass=thcl@123      #tt用户
ansible_become_pass=thcl@123   #root用户
----


.测试ansible
[source,bash]
----
[root@localhost ~]# ansible "test" -m ping
10.23.101.x | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python"
    },
    "changed": false,
    "ping": "pong"
}
----

=== ansible常用模块

.配置文件 /etc/ansible/hosts
[source,bash]
----
    #  连接目标主机的地址
    ansible_ssh_host
    #  连接目标主机的端口，默认 22 时无需指定
    ansible_ssh_port
    #  连接目标主机默认用户
    ansible_ssh_user
    #  连接目标主机默认用户密码
    ansible_ssh_pass
    #  目标主机连接类型，可以是 local 、ssh 或 paramiko
    ansible_ssh_connection
    #  连接目标主机的 ssh 私钥
    ansible_ssh_private_key_file
    #  指定采用非 Python 的其他脚本语言，如 Ruby 、Perl 或其他类似 ansible_python_interpreter 解释器
    ansible_*_interpreter
----

.命令使用 command
[source,bash]
----
ansible hostname -m command -a "free -m"
----


.远程执行本地脚本script
script的功能是在远程主机执行主控端存储的 shell 脚本文件，相当于 scp + shell 组合。 
[source,bash]
----
ansible hostname -m script -a "/home/test.sh 12 34"
----


.shell模块基本和command相同，但是shell支持管道符
[source,bash]
----
ansible hostname -m shell -a "/home/test.sh"
----

.copy模块 类似于SCP
向 Client 组中主机拷贝 test.sh 到 /tmp 下，属主、组为 root ，权限为 0755 +
[source,bash]
----
ansible hostname -m copy -a "src=/home/test.sh dest=/tmp/ owner=root group=root mode=0755"
----


.远程主机系统服务管理
[source,bash]
----
ansible Client -m service -a "name=nginx state=stoped"
ansible Client -m service -a "name=nginx state=restarted"
ansible Client -m service -a "name=nginx state=reloaded"
----


=== ansible-playbook 
.YAML语法
YAML文件扩展名通常为.yaml或者.yml，一定要对齐，只能使用空格
[source,bash]
----
[root@localhost ~]# cat /etc/ansible/hellow.yml
---
- hosts: ss
  remote_user: tt   #tt 用户登陆
  become: yes       #使用 root权限
  become_method: su  #使用 root权限

  tasks:
  - name: touch aa.txt
    shell: touch /root/aa.txt
----

.运行
[source,bash]
----
[root@localhost ~]# ansible-playbook /etc/ansible/hellow.yml

PLAY [say 'hello world'] ****************************

TASK [Gathering Facts] ******************************
ok: [10.23.101.x]

TASK [echo 'hello world'] ***************************
changed: [10.23.101.x]

TASK [print stdout] *********************************
ok: [10.23.101.x] => {
    "msg": ""
}

PLAY RECAP ****************************************************
10.23.101.x               : ok=3    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
----





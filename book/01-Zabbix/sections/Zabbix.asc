=== zabbix

==== 安装
.增加 zabbix [source,console]
----
yum[source,console]
----
 源
[source,bash]
----
rpm -Uvh https://repo.zabbix.com/zabbix/4.4/rhel/7/x86_64/zabbix-release-4.4-1.el7.noarch.rpm
yum -y install zabbix-server-mysql zabbix-web-mysql zabbix-apache-conf zabbix-agent
----

.查看安装的软件包
[source,console]
----

[root@redas_core ~]# rpm -aq |grep zabbix
zabbix-web-mysql-4.4.4-1.el7.noarch
zabbix-get-4.4.4-1.el7.x86_64
zabbix-server-mysql-4.4.4-1.el7.x86_64
zabbix-agent-4.4.4-1.el7.x86_64
zabbix-release-4.4-1.el7.noarch
zabbix-web-4.4.4-1.el7.noarch
----

.增加开机启动
[source,console]
----
systemctl enable zabbix-server[source,console]
----


==== 配置 mysql数据库

.创建数据库
[source,console]
----
CREATE DATABASE zabbix DEFAULT CHARACTER SET utf8mb4 DEFAULT COLLATE utf8mb4_unicode_ci;[source,console]
----


.查看数据库
[source,console]
----
mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| redas              |
| sys                |
| zabbix             |
+--------------------+
----

.新建用户
[source,console]
----
mysql -uroot -pgeek -e "CREATE USER zabbix@localhost identified with mysql_native_password by 'geek';"[source,console]

mysql -uroot -pgeek -e "GRANT ALL ON zabbix.* TO 'zabbix'@'localhost' WITH GRANT OPTION;"[source,console]
----


.查看用户
[source,console]
----
[root@redas_core ~]# mysql -uzabbix -pgeek zabbix -e "show tables"
+----------------------------+
| Tables_in_zabbix           |
+----------------------------+
| acknowledges               |
| actions                    |
| alerts                     |
...
----

.导入数据
[source,console]
----
gzip -d /usr/share/doc/zabbix-server-mysql-4.4.4/create.sql.gz[source,console]

mysql -uzabbix -pgeek zabbix < /usr/share/doc/zabbix-server-mysql-4.4.4/create.sql[source,console]
----


.查看导入数据
[source,console]
----
mysql> show tables;
+----------------------------+
| Tables_in_zabbix           |
+----------------------------+
| acknowledges               |
| actions                    |
| alerts                     |
...
----

==== 配置服务器

.编辑 /etc/zabbix/zabbix_server.conf 文件
[source,console]
----
sed -i '124s/# DBPassword=/DBPassword=geek/' /etc/zabbix/zabbix_server.conf[source,console]
----


.添加时区
[source,console]
----
sed -i '20s@        # php_value date.timezone Europe/Riga@php_value date.timezone Asia/Shanghai@' /etc/httpd/conf.d/zabbix.conf[source,console]
----



==== 添加客户端

.增加 zabbix yum 源
[source,console]
----
rpm -Uvh https://repo.zabbix.com/zabbix/4.4/rhel/7/x86_64/zabbix-release-4.4-1.el7.noarch.rpm[source,console]

yum -y install  zabbix-agent[source,console]
----


.增加开机启动
[source,console]
----
systemctl enable zabbix-agent[source,console]
----


==== 配置客户端

.设置主机ip和客户端名称

[source,console]
----
sed -i '98s/Server=/Server=192.168.2.8/' /etc/zabbix/zabbix_agentd.conf

sed -i '139s/ServerActive=/ServerActive=192.168.2.8/' /etc/zabbix/zabbix_agentd.conf

sed -i '150s/Hostname=/Hostname=yinxin/' /etc/zabbix/zabbix_agentd.conf[source,console]
----


==== 启动服务
.服务端
[source,console]
----
systemctl start zabbix-server[source,console]
----


.客户端
[source,console]
----
systemctl start zabbix-server[source,console]
----


.查看服务状态
[source,console]
----
systemctl status zabbix-server[source,console]
----


.浏览器访问
[source,console]
----
http://192.168.2.8/zabbix/setup.php[source,console]
----



[NOTE]
解决中文乱码 +
将windows /Windows/fonts/simkai.ttf 拷贝到服务器 /usr/share/zabbix/assets/fonts目录下 +
将/usr/share/zabbix/include/defines.inc.php文件下的graphfont替换为 simkai

.企业微信
----
企业ID
ww496d47cc707b7239
AgentId
1000003
Secret
ebxky-GfkJKXl_oOeKQ2zdw_P2lKLUYoRZ5g6FM0l24


{ITEM.NAME}故障
IP:{HOST.HOST}
故障信息:{TRIGGER.NAME}
监控取值:{ITEM.LASTVALUE}
告警时间:{EVENT.DATE} {EVENT.TIME}


主机:{HOST.NAME}故障
地址:{HOSTNAME1}
功能模块:{ITEM.NAME}
监控取值:{ITEM.LASTVALUE}
告警信息:{TRIGGER.NAME}
告警时间:{EVENT.DATE} {EVENT.TIME}


#!/bin/bash
CorpID="ww496d47cc707b7239"                   #企业下面的CorpID
Secret="ebxky-GfkJKXl_oOeKQ2zdw_P2lKLUYoRZ5g6FM0l24"            #创建的应用那有Secret
GURL="https://qyapi.weixin.qq.com/cgi-bin/gettoken?corpid=$CorpID&corpsecret=$Secret"
Token=$(/usr/bin/curl -s -G $GURL |awk -F\": '{print $4}'|awk -F\" '{print $2}')
#echo $Token
PURL="https://qyapi.weixin.qq.com/cgi-bin/message/send?access_token=$Token"

function body(){
        local int agentid=1000003   #改为AgentId 在创建的应用那里看
        local UserID=$1             #发送的用户位于$1的字符串
        local PartyID=2            #第一步看的通讯录中的部门ID
        local Msg=$(echo "$@" | cut -d" " -f3-)
        printf '{\n'
        printf '\t"touser": "'"$UserID"\"",\n"
        printf '\t"toparty": "'"$PartyID"\"",\n"
        printf '\t"msgtype": "text",\n'
        printf '\t"agentid": "'"$agentid"\"",\n"
        printf '\t"text": {\n'
        printf '\t\t"content": "'"$Msg"\""\n"
        printf '\t},\n'
        printf '\t"safe":"0"\n'
        printf '}\n'
}
/usr/bin/curl --data-ascii "$(body $1 $2 $3)" $PURL
企业ID
ww496d47cc707b7239
AgentId
1000003
Secret
ebxky-GfkJKXl_oOeKQ2zdw_P2lKLUYoRZ5g6FM0l24


{ITEM.NAME}故障
IP:{HOST.HOST}
故障信息:{TRIGGER.NAME}
监控取值:{ITEM.LASTVALUE}
告警时间:{EVENT.DATE} {EVENT.TIME}


主机:{HOST.NAME}故障
地址:{HOSTNAME1}
功能模块:{ITEM.NAME}
监控取值:{ITEM.LASTVALUE}
告警信息:{TRIGGER.NAME}
告警时间:{EVENT.DATE} {EVENT.TIME}


#!/bin/bash
CorpID="ww496d47cc707b7239"                   #企业下面的CorpID
Secret="ebxky-GfkJKXl_oOeKQ2zdw_P2lKLUYoRZ5g6FM0l24"            #创建的应用那有Secret
GURL="https://qyapi.weixin.qq.com/cgi-bin/gettoken?corpid=$CorpID&corpsecret=$Secret"
Token=$(/usr/bin/curl -s -G $GURL |awk -F\": '{print $4}'|awk -F\" '{print $2}')
#echo $Token
PURL="https://qyapi.weixin.qq.com/cgi-bin/message/send?access_token=$Token"

function body(){
        local int agentid=1000003   #改为AgentId 在创建的应用那里看
        local UserID=$1             #发送的用户位于$1的字符串
        local PartyID=2            #第一步看的通讯录中的部门ID
        local Msg=$(echo "$@" | cut -d" " -f3-)
        printf '{\n'
        printf '\t"touser": "'"$UserID"\"",\n"
        printf '\t"toparty": "'"$PartyID"\"",\n"
        printf '\t"msgtype": "text",\n'
        printf '\t"agentid": "'"$agentid"\"",\n"
        printf '\t"text": {\n'
        printf '\t\t"content": "'"$Msg"\""\n"
        printf '\t},\n'
        printf '\t"safe":"0"\n'
        printf '}\n'
}
/usr/bin/curl --data-ascii "$(body $1 $2 $3)" $PURL
----



=== MongoDB


==== 安装

==== 基本操作

.创建数据库
----
use database_name
----


.删除数据库
----
db.dropDatabase()
----

.创建集合
----
db.createCollection("users")
----

.删除集合
----
db.user.drop()
----

.插入文档
----
db.users.insert({name:'zhangsan',age:18})` +
db.users.save({name:'lisisi',age:16})
----

[NOTE]
insert和save方法都可以插入数据，当默认的“_id”值已存在时，调用insert方法插入会报错；而save方法不会,会更新相同的_id所在行数据的信息。


.删除文档
----
db.users.remove({'name':'zhangsan'})` +
----
db.collection.drop()
----

.修改文档
[source,bash]
----
db.users.update({'name':'zhangsan'},{$set:{'name':'wanger'}})

#修改多条相同的文档，需要设置 multi 参数为 true
db.collection_name.update({"字段名":"字段值"},{$set:{"要修改的字段名":"修改后的字段值"}},{multi:true})
----

.查询文档
----
db.collection.find(query, projection)
----

.易读方式
----
db.collection.find(query, projection).pretty()
----

==== 条件查询
等于 ::	db.col.find({"by":"root"}).pretty()	
lt 小于 :: db.col.find({"likes":{$lt:50}}).pretty()	
lte 小于或等于 :: db.col.find({"likes":{$lte:50}}).pretty()	
gt 大于 ::	db.col.find({"likes":{$gt:50}}).pretty()	
gte 大于或等于 :: db.col.find({"likes":{$gte:50}}).pretty()	
ne 不等于 :: db.col.find({"likes":{$ne:50}}).pretty()
and :: db.col.find({key1:value1, key2:value2}).pretty()
or :: db.col.find({$or: [{key1: value1}, {key2:value2}]}).pretty()

.Limit
----
db.col.find().limit(NUMBER)
----

.skip 跳过数据读取
----
db.col.find({},{"title":1,_id:0}).limit(1).skip(1)
----

.排序
1：升序，-1：降序 +
----
db.col.find().sort({KEY:1})
----

.索引
----
db.col.createIndex({"title":1})
----

查看集合索引 :: db.col.getIndexes()
查看集合索引大小 :: db.col.totalIndexSize()
删除集合所有索引 :: db.col.dropIndexes()
删除集合指定索引 :: db.col.dropIndex("索引名称")

.聚合
----
db.col.aggregate([{$group : {_id : "$by_user", num : {$sum : 1}}}])
----

$sum :: 计算总和，{$sum: 1}表示返回总和×1的值(即总和的数量),使用{$sum: '$制定字段'}也能直接获取制定字段的值的总和

$avg :: 求平均值

$min :: 求min值

$max :: 求max值

$push :: 将结果文档中插入值到一个数组中

$first :: 根据文档的排序获取第一个文档数据

$last ::  获取最后一个数据



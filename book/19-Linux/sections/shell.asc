==== shell

==== 变量
[source,bash]
----
your_name="qinjx"
echo $your_name
echo ${your_name}

#只读变量
myUrl="http://www.google.com"
readonly myUrl
myUrl="http://www.runoob.com"


#删除变量
#变量被删除后不能再次使用。unset 命令不能删除只读变量。
unset myUrl



#多行注释
#EOF可换
:<<EOF
注释内容...
注释内容...
注释内容...
EOF
----

==== 传参

.参数解释
$#:: 传递到脚本的参数个数
$*:: 以一个单字符串显示所有向脚本传递的参数。如"$*"用「"」括起来的情况、以"$1 $2 … $n"的形式输出所有参数。
$$:: 脚本运行的当前进程ID号
$!:: 后台运行的最后一个进程的ID号
$@:: 与$*相同，但是使用时加引号，并在引号中返回每个参数。如"$@"用「"」括起来的情况、以"$1" "$2" … "$n" 的形式输出所有参数。
$-:: 显示Shell使用的当前选项，与set命令功能相同。
$?:: 显示最后命令的退出状态。0表示没有错误，其他任何值表明有错误。

[NOTE]
====
$* 与 $@ 区别 +
相同点：都是引用所有参数 + 
不同点：只有在双引号中体现出来。假设在脚本运行时写了三个参数 1、2、3，，则 " * " 等价于 "1 2 3"（传递了一个参数），而 "@" 等价于 "1" "2" "3"（传递了三个参数）。
====

==== 运算符
[source,text]
----
-eq	检测两个数是否相等，相等返回 true。	                [ $a -eq $b ] 返回 false。
-ne	检测两个数是否不相等，不相等返回 true。	            [ $a -ne $b ] 返回 true。
-gt	检测左边的数是否大于右边的，如果是，则返回 true。	[ $a -gt $b ] 返回 false。
-lt	检测左边的数是否小于右边的，如果是，则返回 true。	[ $a -lt $b ] 返回 true。
-ge	检测左边的数是否大于等于右边的，如果是，则返回 true。	[ $a -ge $b ] 返回 false。
-le	检测左边的数是否小于等于右边的，如果是，则返回 true。	[ $a -le $b ] 返回 true。


!	非运算，表达式为 true 则返回 false，否则返回 true。	[ ! false ] 返回 true。
-o	或运算，有一个表达式为 true 则返回 true。	        [ $a -lt 20 -o $b -gt 100 ] 返回 true。
-a	与运算，两个表达式都为 true 才返回 true。	        [ $a -lt 20 -a $b -gt 100 ] 返回 false。
----

[NOTE]
条件表达式要放在方括号之间，并且要有空格，例如: [$a==$b] 是错误的，必须写成 [ $a == $b ]。










